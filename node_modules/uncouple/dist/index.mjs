/*!
 * uncouple v0.5.0
 * (c) Vitor Luiz Cavalcanti <vitorluizc@outlook.com> (https://vitorluizc.github.io)
 * Released under the MIT License.
 */
/**
 * Uncouple methods from constructor (class) into functions.
 * @example ```js
 * const { filter } = uncouple(Array);
 * filter([ 1, 2, 3, 4 ], (value) => value % 2 === 0);
 * //=> [ 2, 4 ]
 * ```
 * @param constructor - A constructor (class) to be uncoupled into functions.
 */
var uncouple = function (_a) {
  var prototype = _a.prototype;
  var names = Object.getOwnPropertyNames(prototype);
  return names.reduce(function (methods, name) {
    if (typeof prototype[name] === "function" && name !== "constructor") // @ts-ignore
      { methods[name] = Function.call.bind(prototype[name]); }
    return methods;
  }, Object.create(null));
};

export default uncouple;
